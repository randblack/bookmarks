{"ast":null,"code":"import _defineProperty from \"/Users/rand/RandBlackFolder/mod19/Activity 9/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/rand/RandBlackFolder/mod19/Activity 9/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rand/RandBlackFolder/mod19/Activity 9/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rand/RandBlackFolder/mod19/Activity 9/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rand/RandBlackFolder/mod19/Activity 9/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rand/RandBlackFolder/mod19/Activity 9/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rand/RandBlackFolder/mod19/Activity 9/client/src/pages/Books.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\"; // import { eventNames } from \"cluster\";\n\nvar API = require(\"../utils/API\").default;\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: []\n    };\n\n    _this.submitBook = function (event) {\n      event.preventDefault();\n      console.log(\"Hello submitBook\");\n      API.saveBook({\n        title: _this.state.title,\n        author: _this.state.author,\n        synopsis: _this.state.synopsis\n      });\n\n      _this.loadBooks();\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          books: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"onChange\",\n    //using .bing(this) needed when not using an arrow function\n    value: function onChange(event) {\n      console.log(event.target.value);\n      var name = event.target.name;\n      var value = event.target.value;\n      this.setState(_defineProperty({}, name, value));\n    } //using .bing(this) needed when not using an arrow function\n\n  }, {\n    key: \"componentDidMount\",\n    // Add code here to get all books from the database and save them to this.state.books\n    //this code is the react version of <body onLoad=\"componentDidMount()\">\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"What Books Should I Read?\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Input, {\n        onChange: this.onChange.bind(this),\n        name: \"title\",\n        placeholder: \"Title (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Input, {\n        onChange: this.onChange.bind(this),\n        name: \"author\",\n        placeholder: \"Author (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(TextArea, {\n        onChange: this.onChange.bind(this),\n        name: \"synopsis\",\n        placeholder: \"Synopsis (Optional)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        onClick: this.submitBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Submit Book\"))), React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Books On My List\")), this.state.books.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(ListItem, {\n          key: book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/books/\" + book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, book.title, \" by \", book.author)), React.createElement(DeleteBtn, {\n          book: _this2.state.books._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["/Users/rand/RandBlackFolder/mod19/Activity 9/client/src/pages/Books.js"],"names":["React","Component","Jumbotron","DeleteBtn","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","API","require","default","Books","state","books","submitBook","event","preventDefault","console","log","saveBook","title","author","synopsis","loadBooks","getBooks","then","res","data","setState","catch","err","target","value","name","onChange","bind","length","map","book","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\n// import { eventNames } from \"cluster\";\r\nconst API = require(\"../utils/API\").default\r\n\r\nclass Books extends Component {\r\n  // Initialize this.state.books as an empty array\r\n  state = {\r\n    books: []\r\n  };\r\n  //using .bing(this) needed when not using an arrow function\r\n  onChange(event) {\r\n    console.log(event.target.value);\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  //using .bing(this) needed when not using an arrow function\r\n  submitBook = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Hello submitBook\");\r\n\r\n    API.saveBook({\r\n      title: this.state.title,\r\n      author: this.state.author,\r\n      synopsis: this.state.synopsis\r\n    });\r\n    this.loadBooks();\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  // Add code here to get all books from the database and save them to this.state.books\r\n\r\n  //this code is the react version of <body onLoad=\"componentDidMount()\">\r\n  componentDidMount() {\r\n    this.loadBooks();\r\n  }\r\n\r\n\r\n  loadBooks = () => {\r\n    API.getBooks()\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({ books: res.data }\r\n        );\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6\">\r\n            <Jumbotron>\r\n              <h1>What Books Should I Read?</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input onChange={this.onChange.bind(this)} name=\"title\" placeholder=\"Title (required)\" />\r\n              <Input onChange={this.onChange.bind(this)} name=\"author\" placeholder=\"Author (required)\" />\r\n              <TextArea onChange={this.onChange.bind(this)} name=\"synopsis\" placeholder=\"Synopsis (Optional)\" />\r\n              <FormBtn onClick={this.submitBook}>Submit Book</FormBtn>\r\n            </form>\r\n          </Col>\r\n          <Col size=\"md-6 sm-12\">\r\n            <Jumbotron>\r\n              <h1>Books On My List</h1>\r\n            </Jumbotron>\r\n            {this.state.books.length ? (\r\n              <List>\r\n                {this.state.books.map(book => (\r\n                  <ListItem key={book._id}>\r\n                    <a href={\"/books/\" + book._id}>\r\n                      <strong>\r\n                        {book.title} by {book.author}\r\n                      </strong>\r\n                    </a>\r\n                    <DeleteBtn book={this.state.books._id} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n                <h3>No Results to Display</h3>\r\n              )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Books;\r\n"]},"metadata":{},"sourceType":"module"}